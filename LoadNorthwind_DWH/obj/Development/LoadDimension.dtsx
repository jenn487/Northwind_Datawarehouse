<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/2/2025 8:06:08 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-S7LGA97"
  DTS:CreatorName="DESKTOP-S7LGA97\1RA PENTECOSTAL"
  DTS:DTSID="{A27D47AF-6EAC-4560-865C-688C244B36C8}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7178"
  DTS:MaxErrorCount="10"
  DTS:ObjectName="LoadDimension"
  DTS:PackageType="5"
  DTS:VersionBuild="83"
  DTS:VersionGUID="{2E565AEF-63E3-40AF-96DE-CAFAFC207ED0}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8A3EA8C1-EECE-4A78-B39D-0A3765BF1C36}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dwhconn">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DESKTOP-S7LGA97\SQLEXPRESS;Initial Catalog=DWHNorthwindOrders;Integrated Security=True;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear Data"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A1687973-7992-4815-824F-9D882D007448}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear Data"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B7AB68B9-7A1A-4D29-A75C-E530E45FAB82}"
          SQLTask:SqlStatementSource="DELETE FROM DimShippers;&#xA;DELETE FROM DimProducto;&#xA;DELETE FROM DimCustomer;&#xA;DELETE FROM DimEmployees;&#xA;DELETE FROM DimCategory;&#xA;DELETE FROM DimTime;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Category"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarea Flujo de datos"
      DTS:DTSID="{7227AC39-B9AB-4F4B-B109-CAD696DAF3EA}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Category"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Category\Get Category Data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="Origen de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;7"
              description="Origen de OLE DB"
              name="Get Category Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">[dbo].[DWH_Category]</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="Asignaciones entre los parámetros del comando SQL y las variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Category\Get Category Data.Connections[OleDbConnection]"
                  connectionManagerID="{2DA09653-34AB-4FD4-A103-0760CAB70A9B}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-S7LGA97_SQLEXPRESS.Northwind1]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB]"
                  name="Salida de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].Columns[CategoryID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CategoryID]"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].Columns[CategoryID]"
                      name="CategoryID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].Columns[CategoryName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CategoryName]"
                      length="15"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].Columns[CategoryName]"
                      name="CategoryName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].Columns[Description]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Description]"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CategoryID]"
                      dataType="i4"
                      name="CategoryID" />
                    <externalMetadataColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CategoryName]"
                      dataType="wstr"
                      length="15"
                      name="CategoryName" />
                    <externalMetadataColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Description]"
                      dataType="nText"
                      name="Description" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB]"
                  isErrorOut="true"
                  name="Salida de error de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[CategoryID]"
                      dataType="i4"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[CategoryID]"
                      name="CategoryID" />
                    <outputColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[CategoryName]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[CategoryName]"
                      name="CategoryName" />
                    <outputColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[Description]"
                      dataType="nText"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Category\Load Category Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Category Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String dwhconn
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["dwhconn"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Threading.Tasks;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        LoadCategory(Row.CategoryID, Row.CategoryName, Row.Description).GetAwaiter();
    }

    public async Task LoadCategory(int CategoryID, string CategoryName, BlobColumn Description)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection(this.Variables.dwhconn))
            {
                using (SqlCommand command = new SqlCommand("[dbo].[LoadCategory]", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;

                    command.Parameters.AddWithValue("@CategoryID", CategoryID);
                    command.Parameters.AddWithValue("@CategoryName", CategoryName);
                    command.Parameters.AddWithValue("@Description", Description);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception ex)

        {
            Console.WriteLine($"Error procesando Categorias: {ex.Message}");
        }
    }


}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 CategoryID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool CategoryID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CategoryName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CategoryName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public BlobColumn Description
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[2]];
        }
    }
    public bool Description_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_170e64152190417d9f7c252ca337dd64.Properties.Settings.get_Default():SC_170e64152190417d9f7c252ca337dd64.Properties.Sett" +
    "ings")]

namespace SC_170e64152190417d9f7c252ca337dd64.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_170e64152190417d9f7c252ca337dd64.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{954EEA68-FF1B-4F95-8DFD-18C06F0D9CB0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_170e64152190417d9f7c252ca337dd64</RootNamespace>
    <AssemblyName>SC_170e64152190417d9f7c252ca337dd64</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_170e64152190417d9f7c252ca337dd64</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_170e64152190417d9f7c252ca337dd64</msb:DisplayName>
    <msb:ProjectId>{0106C44C-DEB5-471D-BCC4-D9E11C94C978}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_170e64152190417d9f7c252ca337dd64.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_170e64152190417d9f7c252ca337dd64")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_170e64152190417d9f7c252ca337dd64")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_170e64152190417d9f7c252ca337dd64.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_170e64152190417d9f7c252ca337dd64.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_170e64152190417d9f7c252ca337dd64.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_170e64152190417d9f7c252ca337dd64.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_170e64152190417d9f7c252ca337dd64.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_170e64152190417d9f7c252ca337dd64.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
hgCSCG8ACABdIQAAAACGGCsHBgAIAH0hAAAAAMYATQmcAQgAoiEAAAAAxgFGCYQBDAC1IQAAAADG
AacJhAENALchAAAAAIYYKwemAQ4AxiEAAAAAhhgrB6YBDwDVIQAAAACGCHwFHgEQAPshAAAAAIMY
KwcGABAAAyIAAAAAkwjLBqwBEAAvIgAAAACTCDACsgEQADYiAAAAAJMIPAK4ARAAPiIAAAAAlgie
CL8BEQBFIgAAAACGGCsHBgARAE0iAAAAAJEYMQfEAREAXCIAAAAA4QFaCQYAEQDYJAAAAADhAdgB
GwARAAAAAQDCCQAAAQDRAAAAAgCuAQAAAwAHBgAAAQDEBgAAAgATCAAAAwBRBgAAAQDFAAAAAgCg
AQAAAwDEBgAABABRBgAAAQDEBgAAAQDCCQAAAQD4CAAAAQD4CAAAAQCUBAAAAQDoAQkAUQAJACsH
AQARACsHBgAZACsHCgApACsHEAAxACsHEAA5ACsHEABBACsHEABJACsHEABRACsHEABZACsHEABh
ACsHEABpACsHBgB5ACsHFQCRACsHBgChAFoJBgChANgBGwDZACsHBgAJASsHBgApASsHIQD5AHAE
BgD5AHsEBgCBACAHKADBAHgCMgDBAB8JNwDBAL4ERADhACsHSQDhAMQGUwDhABMIVwDpAFYAWwDh
AEMFYADpALQEZQDpAEoFagDhAL4JbwDhAJIIbwD5ACsHBgA5AWIIcwD5ACcIewABASsHBgD5AP0H
gQBJAUoFhwD5AJIJjgBRAWMJlABxAIYBmwBxAMYJowARASsHqQAxASsHBgDJACsHEADRACsHwgB5
ARYCyQDRAHUI0ACJAYcE1gChAfEARACpACcBbwDBABAB3gCpAKoIBgB5AfsA8AAMACAHAAEUACcB
bwAUAKoIGQGxAXACBgC5AFwBHgE5AYQIIgG5AbsBKAHBAPYFLQHBALQIBgDBANgBGwAuAAsA6gEu
ABMA8wEuABsAEgIuACMAGwIuACsARAIuADMARAIuADsARAIuAEMAGwIuAEsASgIuAFMARAIuAFsA
YQJDAGMAzgKAAGsAqwLhAHMAzgLjAJMAzgIJAZsAEgIjAXMAzgIpAZsAEgLAA4sAzgItALEAAwAB
AAYABwAHAAgACAAKAAAA0QDIAQAACQXMAQAArgHQAQAAHwXMAQAABwbUAQAANwXMAQAAgAXQAQAA
zwbZAQAAUALfAQAAogjlAQIABwADAAIACAAFAAIACQAHAAIACgAJAAIACwALAAIADAANAAIAFQAP
AAIAFwARAAIAGAATAAEAGQATAAIAGgAVAAkAOgAfAAkAPAAhAPkACQEEgAAAAQAAAAAAAAAAAAAA
AACYAAAABAAAAAAAAAAAAAAAMwHoAAAAAAAQAAAAAAAAAAAAAAA8AQIJAAAAABAAAAAAAAAAAAAA
ADwBJQkAAAAABAAAAAAAAAAAAAAAMwHcAAAAAAAEAAAAAAAAAAAAAAAzAVMFAAAAABAAAAAAAAAA
AAAAADwBWwYAAAAAAAAAAAEAAAB8BwAACQACADEAPwBtAOkAbQAPAQAAAAAASURUU1ZhcmlhYmxl
MTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAPD51X18xAFRhc2tg
MQBUYXNrQXdhaXRlcmAxAEdldEludDMyADxjb25uZWN0aW9uPjVfXzIAPD51X18yADxjb21tYW5k
PjVfXzMAPExvYWRDYXRlZ29yeT5kX18zAFNDXzE3MGU2NDE1MjE5MDQxN2Q5ZjdjMjUyY2EzMzdk
ZDY0ADxNb2R1bGU+AElucHV0SUQAZ2V0X0NhdGVnb3J5SUQAU3lzdGVtLkRhdGEAbXNjb3JsaWIA
T3BlbkFzeW5jAEV4ZWN1dGVOb25RdWVyeUFzeW5jAEF3YWl0VW5zYWZlT25Db21wbGV0ZWQAZ2V0
X0lzQ29tcGxldGVkAERiQ29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVz
c2FnZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBDb25z
b2xlAElucHV0TmFtZQBnZXRfQ2F0ZWdvcnlOYW1lAFdyaXRlTGluZQBJQXN5bmNTdGF0ZU1hY2hp
bmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRlTWFjaGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAENyZWF0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQA8PjFfX3N0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGlu
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4
ZWN1dGUAQWRkV2l0aFZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3Ry
aW5nAGdldF9UYXNrAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18xNzBlNjQxNTIxOTA0MTdkOWY3
YzI1MmNhMzM3ZGQ2NC5kbGwAZ2V0X0NhdGVnb3J5SURfSXNOdWxsAGdldF9DYXRlZ29yeU5hbWVf
SXNOdWxsAGdldF9EZXNjcmlwdGlvbl9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AQmxvYkNvbHVtbgBnZXRfZHdoY29ubgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0
aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAFNldEV4Y2VwdGlvbgBnZXRfRGVzY3JpcHRp
b24AU3lzdGVtLkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABBc3lu
Y1Rhc2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAFNxbFBhcmFtZXRlcgBUYXNrQXdhaXRlcgBHZXRBd2FpdGVyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzE3MGU2NDE1MjE5MDQxN2Q5ZjdjMjUyY2EzMzdkZDY0
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18xNzBlNjQx
NTIxOTA0MTdkOWY3YzI1MmNhMzM3ZGQ2NC5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxl
cwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAPD40X190aGlz
AFN5c3RlbS5UaHJlYWRpbmcuVGFza3MARXF1YWxzAENvbm5lY3Rpb25zAGdldF9QYXJhbWV0ZXJz
AENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAR2V0UmVzdWx0AFNldFJlc3Vs
dABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2Ny
aXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAU3RhcnQATWljcm9zb2Z0
LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABNb3ZlTmV4dABHZXRW
YWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JD
b250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkATG9hZENh
dGVnb3J5AAAPSQBuAHAAdQB0ACAAMAAAD2QAdwBoAGMAbwBuAG4AAHFTAEMAXwAxADcAMABlADYA
NAAxADUAMgAxADkAMAA0ADEANwBkADkAZgA3AGMAMgA1ADIAYwBhADMAMwA3AGQAZAA2ADQALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAClbAGQAYgBvAF0ALgBbAEwA
bwBhAGQAQwBhAHQAZQBnAG8AcgB5AF0AABdAAEMAYQB0AGUAZwBvAHIAeQBJAEQAABtAAEMAYQB0
AGUAZwBvAHIAeQBOAGEAbQBlAAAZQABEAGUAcwBjAHIAaQBwAHQAaQBvAG4AADtFAHIAcgBvAHIA
IABwAHIAbwBjAGUAcwBhAG4AZABvACAAQwBhAHQAZQBnAG8AcgBpAGEAcwA6ACAAAAAdVDMisa0x
T7CItIQ+aYsFAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARI5BSABARJRBiABARGAkQQgABFVBAcB
ESQEAAARYQcwAQEBEB4ABAoBESQEIAASQQkgAwESdR0IEnkDBhJ1AwYdCAQgAQgIBCABAggEIAEO
CAQgARwIAyAAAgcgAgIOEYChBSABHQgIBSAAEoClBiABEoCpHAUAABKArQYgARwSgLEHAAESORGA
tQUgABKAuQcgAgEOEoC5EAcGCBIIEVUVEVkBCBJdEl0GIAIBDhJlBiABARGAwQUgABKAxQcgAhKA
zQ4cCjACAgEQHgAQHgEGCgIRVREkCCAAFRKA1QEIBhUSgNUBCAggABURWQETAAUVEVkBCAkKAhUR
WQEIESQEIAATAAMgAA4FAAIODg4EAAEBDgUgAQESXQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIY
AwYSfQQGEoCJBAYSgI0DBhIgAgYIAwYRYQMGEggCBg4DBhJFAwYSZQMGEmkDBhFVBgYVEVkBCAUg
AQESDAggAxJBCA4SRQMgAAgEIAASRQkgBAEIDhJ1EnkFIAEBEn0FAAASgIkFAAASgI0GAAEBEoCN
BAAAEiADAAABAygACAMoAAIDKAAOBCgAEkUFCAASgIkFCAASgI0ECAASIAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMTcwZTY0MTUyMTkwNDE3
ZDlmN2MyNTJjYTMzN2RkNjQAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjciAQAdU2NyaXB0TWFpbis8TG9hZENhdGVnb3J5PmRfXzMAAAQBAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAA8PAAAAAAAAAAAAABWPAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASDwAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AMQA3ADAAZQA2ADQAMQA1ADIAMQA5ADAANAAxADcAZAA5AGYANwBjADIANQAyAGMAYQAzADMA
NwBkAGQANgA0AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAxADcAMABlADYANAAxADUA
MgAxADkAMAA0ADEANwBkADkAZgA3AGMAMgA1ADIAYwBhADMAMwA3AGQAZAA2ADQALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADEANwAwAGUA
NgA0ADEANQAyADEAOQAwADQAMQA3AGQAOQBmADcAYwAyADUAMgBjAGEAMwAzADcAZABkADYANAAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAxADcAMABlADYA
NAAxADUAMgAxADkAMAA0ADEANwBkADkAZgA3AGMAMgA1ADIAYwBhADMAMwA3AGQAZAA2ADQAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGg8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_170e64152190417d9f7c252ca337dd64</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::dwhconn</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">40</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Category\Load Category Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Category\Load Category Data.Inputs[Input 0].Columns[CategoryID]"
                      cachedDataType="i4"
                      cachedName="CategoryID"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].Columns[CategoryID]" />
                    <inputColumn
                      refId="Package\Load Category\Load Category Data.Inputs[Input 0].Columns[CategoryName]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="CategoryName"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].Columns[CategoryName]" />
                    <inputColumn
                      refId="Package\Load Category\Load Category Data.Inputs[Input 0].Columns[Description]"
                      cachedDataType="nText"
                      cachedName="Description"
                      lineageId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB].Columns[Description]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Category\Load Category Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Category\Load Category Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Category.Paths[Salida de origen de OLE DB]"
              endId="Package\Load Category\Load Category Data.Inputs[Input 0]"
              name="Salida de origen de OLE DB"
              startId="Package\Load Category\Get Category Data.Outputs[Salida de origen de OLE DB]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarea Flujo de datos"
      DTS:DTSID="{67BA2176-9015-4419-B295-D1EDBF835CEB}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Customers\Get Customers Data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="Origen de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;7"
              description="Origen de OLE DB"
              name="Get Customers Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">[dbo].[DWH_Customer]</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="Asignaciones entre los parámetros del comando SQL y las variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Customers\Get Customers Data.Connections[OleDbConnection]"
                  connectionManagerID="{2DA09653-34AB-4FD4-A103-0760CAB70A9B}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-S7LGA97_SQLEXPRESS.Northwind1]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB]"
                  name="Salida de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[CustomerID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CustomerID]"
                      length="5"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[CustomerID]"
                      name="CustomerID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[CompanyName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CompanyName]"
                      length="40"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[CompanyName]"
                      name="CompanyName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[ContactName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ContactName]"
                      length="30"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[ContactName]"
                      name="ContactName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[Country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Country]"
                      length="15"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[Region]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Region]"
                      length="15"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[Region]"
                      name="Region"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CustomerID]"
                      dataType="wstr"
                      length="5"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CompanyName]"
                      dataType="wstr"
                      length="40"
                      name="CompanyName" />
                    <externalMetadataColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ContactName]"
                      dataType="wstr"
                      length="30"
                      name="ContactName" />
                    <externalMetadataColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Country]"
                      dataType="wstr"
                      length="15"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Region]"
                      dataType="wstr"
                      length="15"
                      name="Region" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB]"
                  isErrorOut="true"
                  name="Salida de error de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[CustomerID]"
                      dataType="wstr"
                      length="5"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[CustomerID]"
                      name="CustomerID" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[CompanyName]"
                      dataType="wstr"
                      length="40"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[CompanyName]"
                      name="CompanyName" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[ContactName]"
                      dataType="wstr"
                      length="30"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[ContactName]"
                      name="ContactName" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[Country]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[Country]"
                      name="Country" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[Region]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[Region]"
                      name="Region" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Customers\Load Customers Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Customers Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String dwhconn
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["dwhconn"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Threading.Tasks;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        LoadCustomer(Row.CustomerID, Row.CompanyName, Row.ContactName, Row.Country, Row.Region).GetAwaiter();
    }

    public async Task LoadCustomer(string CustomerID, string CompanyName, string ContactName, string Country, string Region)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection(this.Variables.dwhconn))
            {
                using (SqlCommand command = new SqlCommand("[dbo].[LoadCustomer]", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;

                    command.Parameters.AddWithValue("@CustomerID", CustomerID);
                    command.Parameters.AddWithValue("@CompanyName", CompanyName);
                    command.Parameters.AddWithValue("@ContactName", ContactName);
                    command.Parameters.AddWithValue("@Country", Country);
                    command.Parameters.AddWithValue("@Region", Region);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception ex)

        {
            Console.WriteLine($"Error procesando Clientes: {ex.Message}");
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8f5f6ccf53f24a29be97c59b4e937042.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4955A7D1-7915-481A-8EFB-AA4617D1752C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8f5f6ccf53f24a29be97c59b4e937042</RootNamespace>
    <AssemblyName>SC_8f5f6ccf53f24a29be97c59b4e937042</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8f5f6ccf53f24a29be97c59b4e937042.Properties.Settings.get_Default():SC_8f5f6ccf53f24a29be97c59b4e937042.Properties.Sett" +
    "ings")]

namespace SC_8f5f6ccf53f24a29be97c59b4e937042.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CustomerID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool CustomerID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CompanyName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CompanyName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ContactName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool ContactName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Country
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Country_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Region
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Region_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_8f5f6ccf53f24a29be97c59b4e937042</msb:CodeName>
    <msb:DisplayName>SC_8f5f6ccf53f24a29be97c59b4e937042</msb:DisplayName>
    <msb:ProjectId>{CE9C34E1-EED4-40D9-B6A0-D2ADA62B7384}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_8f5f6ccf53f24a29be97c59b4e937042.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8f5f6ccf53f24a29be97c59b4e937042")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8f5f6ccf53f24a29be97c59b4e937042")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8f5f6ccf53f24a29be97c59b4e937042.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8f5f6ccf53f24a29be97c59b4e937042.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8f5f6ccf53f24a29be97c59b4e937042.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8f5f6ccf53f24a29be97c59b4e937042.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8f5f6ccf53f24a29be97c59b4e937042.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8f5f6ccf53f24a29be97c59b4e937042.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
+SAAAAAAhhhSBwYABwABIQAAAACGGFIHSQAHAAwhAAAAAIYIvAAUAQoAISEAAAAAhggLBWUACgAq
IQAAAACGCLEBFAEKAD8hAAAAAIYIOAVlAAoASCEAAAAAhgiXARQBCgBdIQAAAACGCCEFZQAKAGYh
AAAAAIYI+gkUAQoAeyEAAAAAhghhBWUACgCEIQAAAACGCKcFFAEKAJkhAAAAAIYITwVlAAoAoiEA
AAAAhgDlCWUACgCqIQAAAACGALkIZQAKALIhAAAAAIYYUgcGAAoA0iEAAAAAxgB0CYYBCgD3IQAA
AADGAW0JdgEOAAoiAAAAAMYBzgl2AQ8ADCIAAAAAhhhSB5ABEAAbIgAAAACGGFIHkAERACoiAAAA
AIYImwUUARIAUCIAAAAAgxhSBwYAEgBYIgAAAACTCOUGlgESAIQiAAAAAJMINgKcARIAiyIAAAAA
kwhCAqIBEgCTIgAAAACWCMUIqQETAJoiAAAAAIYYUgcGABMAoiIAAAAAkRhYB64BEwCwIgAAAADh
AYEJBgATAFwlAAAAAOEB3gEbABMAAAABAOkJAAABAMAAAAACALUBAAADAJsBAAAEAP4JAAAFAKsF
AAABAN4GAAACADoIAAADAGsGAAABAMsAAAACAKcBAAADAN4GAAAEAGsGAAABAN4GAAABAOkJAAAB
AB8JAAABAB8JAAABAJoEAAABAO4BCQBNAAkAUgcBABEAUgcGABkAUgcKACkAUgcQADEAUgcQADkA
UgcQAEEAUgcQAEkAUgcQAFEAUgcQAFkAUgcQAGEAUgcQAGkAUgcGAHkAUgcVAIkAUgcGAJkAgQkG
AJkA3gEbANEAUgcGAAEBUgcGACEBUgchAPEAdgQGAPEAgQQGAIEARwcoALkAfgIyALkARgk3ALkA
xAREANkAUgdJANkA3gZTANkAOghXAOEAugRbANkAbQVgANkA5QllANkAuQhlAPEAUgcGADEBiQhp
APEATghxAPkAUgcGAPEAJAh3AEEBdAV9APEAuQmEAEkBigmKAHEAfQGRAHEA7QmZAAkBUgefACkB
UgcGAMEAUgcQAMkAUge4AHEBHAK/AMkAnAjGAIEBjQTMAJEB6ABEAKEAHgFlALkABwHUAKEA0QgG
AHEB8gDmAAwARwf2ABQAHgFlABQA0QgPAaEBdgIGALEAUwEUATEBqwgYAakBwQEeAbkAIAYjAbkA
2wgGALkA3gEbAC4ACwDLAS4AEwDUAS4AGwDzAS4AIwD8AS4AKwAlAi4AMwAlAi4AOwAlAi4AQwD8
AS4ASwArAi4AUwAlAi4AWwBCAkMAYwCzAoAAawCQAuEAcwCzAuMAkwCzAiMBcwCzAokBmwDzAakB
mwDzAUAEiwCzAi0ApwADAAEABgALAAcADAAIAA4AAADAALIBAAAPBbYBAAC1AbIBAAA8BbYBAACb
AbIBAAAlBbYBAAD+CbIBAABlBbYBAACrBbIBAABTBbYBAACfBbIBAADpBroBAABWAsABAADJCMYB
AgAHAAMAAgAIAAUAAgAJAAcAAgAKAAkAAgALAAsAAgAMAA0AAgANAA8AAgAOABEAAgAPABMAAgAQ
ABUAAgAZABcAAgAbABkAAgAcABsAAQAdABsAAgAeAB0ACQBCAB8ACQBEACEA7wD/AASAAAABAAAA
AAAAAAAAAAAAAFYAAAAEAAAAAAAAAAAAAAApAd8AAAAAABAAAAAAAAAAAAAAADIBKQkAAAAABAAA
AAAAAAAAAAAAKQHTAAAAAAAQAAAAAAAAAAAAAAAyAUwJAAAAAAQAAAAAAAAAAAAAACkBfQUAAAAA
EAAAAAAAAAAAAAAAMgF1BgAAAAAAAAAAAQAAAKMHAAAJAAIAMQA/AGkA3wBpAAUBAAAAAABJRFRT
VmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVf
XzEAVGFza2AxAFRhc2tBd2FpdGVyYDEAU0NfOGY1ZjZjY2Y1M2YyNGEyOWJlOTdjNTliNGU5Mzcw
NDIAPGNvbm5lY3Rpb24+NV9fMgA8PnVfXzIAPGNvbW1hbmQ+NV9fMwA8TG9hZEN1c3RvbWVyPmRf
XzMAPE1vZHVsZT4AZ2V0X0N1c3RvbWVySUQASW5wdXRJRABTeXN0ZW0uRGF0YQBtc2NvcmxpYgBP
cGVuQXN5bmMARXhlY3V0ZU5vblF1ZXJ5QXN5bmMAQXdhaXRVbnNhZmVPbkNvbXBsZXRlZABnZXRf
SXNDb21wbGV0ZWQARGJDb21tYW5kAFNxbENvbW1hbmQAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNz
YWdlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENvbnNv
bGUAZ2V0X0NvbnRhY3ROYW1lAElucHV0TmFtZQBnZXRfQ29tcGFueU5hbWUAV3JpdGVMaW5lAElB
c3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNoaW5lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAHNldF9Db21tYW5kVHlwZQBWYWx1ZVR5cGUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERp
c3Bvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlADw+MV9fc3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
eW5jU3RhdGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJl
RXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBHZXRTdHJpbmcAZ2V0X1Rhc2sAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzhmNWY2
Y2NmNTNmMjRhMjliZTk3YzU5YjRlOTM3MDQyLmRsbABnZXRfQ3VzdG9tZXJJRF9Jc051bGwAZ2V0
X0NvbnRhY3ROYW1lX0lzTnVsbABnZXRfQ29tcGFueU5hbWVfSXNOdWxsAGdldF9SZWdpb25fSXNO
dWxsAGdldF9Db3VudHJ5X0lzTnVsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0
TWFpbgBnZXRfZHdoY29ubgBnZXRfUmVnaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5H
bG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJD
b25uZWN0aW9uAFNxbENvbm5lY3Rpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBT
dHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAAQXN5bmNUYXNrTWV0aG9kQnVpbGRlcgA8PnRf
X2J1aWxkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAExvYWRDdXN0b21lcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
LldyYXBwZXIAU3FsUGFyYW1ldGVyAFRhc2tBd2FpdGVyAEdldEF3YWl0ZXIALmN0b3IALmNjdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAU0NfOGY1ZjZjY2Y1M2YyNGEyOWJlOTdjNTliNGU5MzcwNDIuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzhmNWY2Y2NmNTNmMjRhMjli
ZTk3YzU5YjRlOTM3MDQyLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwA8PjRfX3RoaXMAU3lzdGVtLlRo
cmVhZGluZy5UYXNrcwBFcXVhbHMAQ29ubmVjdGlvbnMAZ2V0X1BhcmFtZXRlcnMAQ29uY2F0AE9i
amVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABHZXRSZXN1bHQAU2V0UmVzdWx0AFN5c3RlbS5E
YXRhLlNxbENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABTdGFydABNaWNyb3NvZnQuU3FsU2VydmVy
LlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AE1vdmVOZXh0AEdldFZhbHVlV2l0aENv
bnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASW5w
dXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBnZXRfQ291bnRyeQAAAAAP
SQBuAHAAdQB0ACAAMAAAD2QAdwBoAGMAbwBuAG4AAHFTAEMAXwA4AGYANQBmADYAYwBjAGYANQAz
AGYAMgA0AGEAMgA5AGIAZQA5ADcAYwA1ADkAYgA0AGUAOQAzADcAMAA0ADIALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAClbAGQAYgBvAF0ALgBbAEwAbwBhAGQAQwB1
AHMAdABvAG0AZQByAF0AABdAAEMAdQBzAHQAbwBtAGUAcgBJAEQAABlAAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAGUAAQwBvAG4AdABhAGMAdABOAGEAbQBlAAARQABDAG8AdQBuAHQAcgB5AAAPQABS
AGUAZwBpAG8AbgAAN0UAcgByAG8AcgAgAHAAcgBvAGMAZQBzAGEAbgBkAG8AIABDAGwAaQBlAG4A
dABlAHMAOgAgAAAAqxoO+XEKUEyIJbNYnv2SngAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQESOQUg
AQESTQYgAQERgI0EIAARUQQHAREkBAAAEV0HMAEBARAeAAQKAREkBCAAEkEJIAMBEnEdCBJ1AwYS
cQMGHQgEIAEOCAQgAQIIAyAAAgcgAgIOEYCdBSABHQgIBSAAEoChBiABEoClHAUAABKAqQYgARwS
gK0HAAESORGAsQUgABKAtQcgAgEOEoC1EAcGCBIIEVEVEVUBCBJZElkGIAIBDhJhBiABARGAvQUg
ABKAwQcgAhKAxQ4cCjACAgEQHgAQHgEGCgIRUREkCCAAFRKAzQEIBhUSgM0BCAggABURVQETAAUV
EVUBCAkKAhURVQEIESQEIAATAAMgAA4FAAIODg4EAAEBDgUgAQESWQi3elxWGTTgiQiJhF3NgIDM
kQMGEhQDBhIYAwYSeQQGEoCFBAYSgIkDBhIgAgYIAwYRXQMGEggCBg4DBhJhAwYSZQMGEVEGBhUR
VQEIBSABARIMCSAFEkEODg4ODgkgBAEIDhJxEnUFIAEBEnkFAAASgIUFAAASgIkGAAEBEoCJBAAA
EiADAAABAygADgMoAAIFCAASgIUFCAASgIkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfOGY1ZjZjY2Y1M2YyNGEyOWJlOTdjNTliNGU5
MzcwNDIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAATQEAHC5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQuNy4y
IgEAHVNjcmlwdE1haW4rPExvYWRDdXN0b21lcj5kX18zAAAEAQAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABQPQAA
AAAAAAAAAABqPQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXD0AAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AOABmADUAZgA2AGMAYwBmADUAMwBmADIANABhADIAOQBiAGUAOQA3AGMANQA5AGIANABlADkA
MwA3ADAANAAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4AGYANQBmADYAYwBjAGYA
NQAzAGYAMgA0AGEAMgA5AGIAZQA5ADcAYwA1ADkAYgA0AGUAOQAzADcAMAA0ADIALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgAZgA1AGYA
NgBjAGMAZgA1ADMAZgAyADQAYQAyADkAYgBlADkANwBjADUAOQBiADQAZQA5ADMANwAwADQAMgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4AGYANQBmADYA
YwBjAGYANQAzAGYAMgA0AGEAMgA5AGIAZQA5ADcAYwA1ADkAYgA0AGUAOQAzADcAMAA0ADIAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHw9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8f5f6ccf53f24a29be97c59b4e937042</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::dwhconn</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">84</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Customers\Load Customers Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Customers\Load Customers Data.Inputs[Input 0].Columns[CustomerID]"
                      cachedDataType="wstr"
                      cachedLength="5"
                      cachedName="CustomerID"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\Load Customers\Load Customers Data.Inputs[Input 0].Columns[CompanyName]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="CompanyName"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[CompanyName]" />
                    <inputColumn
                      refId="Package\Load Customers\Load Customers Data.Inputs[Input 0].Columns[ContactName]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="ContactName"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[ContactName]" />
                    <inputColumn
                      refId="Package\Load Customers\Load Customers Data.Inputs[Input 0].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="Country"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[Country]" />
                    <inputColumn
                      refId="Package\Load Customers\Load Customers Data.Inputs[Input 0].Columns[Region]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="Region"
                      lineageId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB].Columns[Region]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Customers\Load Customers Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Customers\Load Customers Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Customers.Paths[Salida de origen de OLE DB]"
              endId="Package\Load Customers\Load Customers Data.Inputs[Input 0]"
              name="Salida de origen de OLE DB"
              startId="Package\Load Customers\Get Customers Data.Outputs[Salida de origen de OLE DB]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Employees"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarea Flujo de datos"
      DTS:DTSID="{B3251D0A-32C1-490F-8374-501CB3F69821}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Employees"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Employees\Get Employees Data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="Origen de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;7"
              description="Origen de OLE DB"
              name="Get Employees Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">[dbo].[DWH_Employees]</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="Asignaciones entre los parámetros del comando SQL y las variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Employees\Get Employees Data.Connections[OleDbConnection]"
                  connectionManagerID="{2DA09653-34AB-4FD4-A103-0760CAB70A9B}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-S7LGA97_SQLEXPRESS.Northwind1]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB]"
                  name="Salida de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[EmployeeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[EmployeeID]"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[EmployeeID]"
                      name="EmployeeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[NombreEmpleado]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[NombreEmpleado]"
                      length="31"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[NombreEmpleado]"
                      name="NombreEmpleado"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[Title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Title]"
                      length="30"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[HireDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[HireDate]"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[HireDate]"
                      name="HireDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[ReportsTo]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ReportsTo]"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[ReportsTo]"
                      name="ReportsTo"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[NombreEmpleado]"
                      dataType="wstr"
                      length="31"
                      name="NombreEmpleado" />
                    <externalMetadataColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Title]"
                      dataType="wstr"
                      length="30"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[HireDate]"
                      dataType="dbTimeStamp"
                      name="HireDate" />
                    <externalMetadataColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ReportsTo]"
                      dataType="i4"
                      name="ReportsTo" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB]"
                  isErrorOut="true"
                  name="Salida de error de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[EmployeeID]"
                      dataType="i4"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[EmployeeID]"
                      name="EmployeeID" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[NombreEmpleado]"
                      dataType="wstr"
                      length="31"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[NombreEmpleado]"
                      name="NombreEmpleado" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[Title]"
                      dataType="wstr"
                      length="30"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[HireDate]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[HireDate]"
                      name="HireDate" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[ReportsTo]"
                      dataType="i4"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[ReportsTo]"
                      name="ReportsTo" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Employees\Load Employees Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Employees Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Threading.Tasks;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if (!Row.EmployeeID_IsNull) 
        {
            int employeeID = Row.EmployeeID;
            string nombreEmpleado = Row.NombreEmpleado_IsNull ? null : Row.NombreEmpleado;
            string title = Row.Title_IsNull ? null : Row.Title;
            DateTime hireDate = Row.HireDate_IsNull ? DateTime.MinValue : Row.HireDate;
            int? reportsTo = Row.ReportsTo_IsNull ? (int?)null : Row.ReportsTo;

            LoadEmployees(employeeID, nombreEmpleado, title, hireDate, reportsTo).GetAwaiter();
        }
        else
        {
            bool cancel;
            ComponentMetaData.FireError(0, "Input0_ProcessInputRow", "El ID de empleado no puede ser nulo.", "", 0, out cancel);
        }
    }

    //Ahora acepta valores nulos donde lleva
    public async Task LoadEmployees(int EmployeeID, string NombreEmpleado, string Title, DateTime HireDate, int? ReportsTo)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection(this.Variables.dwhconn))
            {
                using (SqlCommand command = new SqlCommand("[dbo].[LoadEmployee]", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    command.Parameters.AddWithValue("@EmployeeID", EmployeeID);

                    command.Parameters.AddWithValue("@NombreEmpleado", (object)NombreEmpleado ?? DBNull.Value);
                    command.Parameters.AddWithValue("@Title", (object)Title ?? DBNull.Value);
                    command.Parameters.AddWithValue("@HireDate", HireDate == DateTime.MinValue ? (object)DBNull.Value : HireDate);
                    command.Parameters.AddWithValue("@ReportsTo", (object)ReportsTo ?? DBNull.Value);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error procesando Empleados: {ex.Message}");
        }
    }
}



]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0c90ae233ee946c38f2a6f63d2fbe892.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6168CAC9-AEBF-4C35-819B-FE828E97359F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0c90ae233ee946c38f2a6f63d2fbe892</RootNamespace>
    <AssemblyName>SC_0c90ae233ee946c38f2a6f63d2fbe892</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 EmployeeID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool EmployeeID_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String NombreEmpleado
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool NombreEmpleado_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool Title_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime HireDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool HireDate_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ReportsTo
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool ReportsTo_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0c90ae233ee946c38f2a6f63d2fbe892.Properties.Settings.get_Default():SC_0c90ae233ee946c38f2a6f63d2fbe892.Properties.Sett" +
    "ings")]

namespace SC_0c90ae233ee946c38f2a6f63d2fbe892.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String dwhconn
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["dwhconn"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_0c90ae233ee946c38f2a6f63d2fbe892</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_0c90ae233ee946c38f2a6f63d2fbe892</msb:DisplayName>
    <msb:ProjectId>{7E9C756C-3EB3-414E-961D-C7D02BFFC28D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0c90ae233ee946c38f2a6f63d2fbe892.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0c90ae233ee946c38f2a6f63d2fbe892")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0c90ae233ee946c38f2a6f63d2fbe892")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0c90ae233ee946c38f2a6f63d2fbe892.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0c90ae233ee946c38f2a6f63d2fbe892.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0c90ae233ee946c38f2a6f63d2fbe892.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0c90ae233ee946c38f2a6f63d2fbe892.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0c90ae233ee946c38f2a6f63d2fbe892.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0c90ae233ee946c38f2a6f63d2fbe892.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
yiMAAAAAhhjmCAYAHQDSIwAAAACRGOwIIgIdAOAjAAAAAOEBIwsGAB0A0CYAAAAA4QExAhsAHQAA
AAEAiwsAAAEA/QAAAAIAjAcAAAMA+AEAAAQA4gIAAAUAawcAAAEATAgAAAIA3AkAAAMAtQcAAAEA
EAUAAAEAEAUAAAEAEAUAAAEAEAUAAAEAEAUAAAEAEAUAAAEAEAUAAAEAEAUAAAEAEAUAAAEAEAUA
AAEACAEAAAIA/gEAAAMATAgAAAQAtQcAAAEATAgAAAEAiwsAAAEAwQoAAAEAwQoAAAEAEAUAAAEA
QQIJAFUACQDmCAEAEQDmCAYAGQDmCAoAKQDmCBAAMQDmCBAAOQDmCBAAQQDmCBAASQDmCBAAUQDm
CBAAWQDmCBAAYQDmCBAAaQDmCAYAiQDmCBUAmQDmCAYAqQAjCwYAqQAxAhsA4QDmCAYAEQHmCAYA
MQHmCCEAAQHjBAYAAQHuBAYAcQAHBTsADADmCEUAkQDRCEsAAQEcAVAAQQHcCFYAyQDrAmYAyQDo
CmsAyQA6BXgA6QDmCH0A6QBMCIcA6QDcCYsA8QB6AI8A6QBtBpQA6QBVBpoA6QBcBgEAUQHmCBAA
8QAwBZ8A8QAIAqQA6QCHC6oA6QBbCqoAAQHmCAYAWQErCq4AAQHwCbYACQHmCAYAAQHGCbwAaQFk
BsIAAQFbC8kAcQEsC88AgQDQAdYAgQCPC94AGQHmCOQAOQHmCAYA0QDmCBAA2QDmCP0AmQFvAgQB
2QA+CgsBqQH6BBEBuQEKBRkBcQCcCx4BwQE7AXgAsQBxAaoAyQBaASYBsQBzCgYAmQFFATgBFADR
CEgBHABxAaoAHABzCmEB0QHJAgYAwQCmAWYBWQFNCmoB2QEUAnAByQAoB3UByQB9CgYAyQAxAhsA
LgALAEgCLgATAFECLgAbAHACLgAjAHkCLgArAKICLgAzAKICLgA7AKICLgBDAHkCLgBLAKgCLgBT
AKICLgBbAL8CQwBjAC0DgABrAAkD4QBzAC0D4wCTAC0DIwFzAC0DiQGbAHACqQGbAHACgAWLAC0D
KABhAOwAAwABAAYACwAHAAwACAAOAAAA/QAmAgAAogUqAgAAjAcuAgAARgYqAgAA+AEuAgAAyQUq
AgAA4gIyAgAA7gUqAgAAawcmAgAAFwYqAgAAmAYuAgAAVwg3AgAAqQI9AgAAawpDAgIABwADAAEA
CAADAAIACQAFAAEACgAFAAIACwAHAAEADAAHAAIADQAJAAEADgAJAAIADwALAAEAEAALAAIAEQAN
AAEAEgANAAIAEwAPAAEAFAAPAAIAFQARAAEAFgARAAIAFwATAAEAGAATAAIAGQAVAAEAGgAVAAIA
IwAXAAIAJQAZAAIAJgAbAAEAJwAbAAIAKAAdAAkAVgAfAAkAWAAhAD8AQQFRAQSAAAABAAAAAAAA
AAAAAAAAAIMAAAAEAAAAAAAAAAAAAAB7ATIBAAAAABAAAAAAAAAAAAAAAIQBywoAAAAABAAAAAAA
AAAAAAAAewEQAQAAAAAQAAAAAAAAAAAAAACEAe4KAAAAAAQAAAAAAAAAAAAAAHsBdgYAAAAAEAAA
AAAAAAAAAAAAhAHiBwAAAAAQAAAAAAAAAAAAAACEAb8HAAAAAAAAAAABAAAANwkAAAkAAgA5AHMA
fwAxAX8AVwEAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNW
YXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAPD51X18xAE51bGxhYmxlYDEAVGFz
a2AxAFRhc2tBd2FpdGVyYDEAR2V0SW50MzIAU0NfMGM5MGFlMjMzZWU5NDZjMzhmMmE2ZjYzZDJm
YmU4OTIAPGNvbm5lY3Rpb24+NV9fMgA8PnVfXzIAPGNvbW1hbmQ+NV9fMwA8TG9hZEVtcGxveWVl
cz5kX18zADxNb2R1bGU+AGdldF9FbXBsb3llZUlEAHNldF9FbXBsb3llZUlEAElucHV0SUQAU3lz
dGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAE9wZW5Bc3luYwBFeGVjdXRl
Tm9uUXVlcnlBc3luYwBBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdldF9Jc0NvbXBsZXRlZABEYkNv
bW1hbmQAU3FsQ29tbWFuZABkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UASURpc3Bvc2FibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQ29uc29sZQBnZXRfVGl0bGUAc2V0
X1RpdGxlAElucHV0TmFtZQBHZXREYXRlVGltZQBXcml0ZUxpbmUASUFzeW5jU3RhdGVNYWNoaW5l
AFNldFN0YXRlTWFjaGluZQBzdGF0ZU1hY2hpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUAc2V0X0NvbW1hbmRUeXBlAFZhbHVlVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBnZXRfSGlyZURh
dGUAc2V0X0hpcmVEYXRlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQA8PjFfX3N0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3luY1N0YXRlTWFjaGluZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAQWRkV2l0aFZhbHVlAE1pblZhbHVlAHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAGdldF9UYXNrAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ18wYzkwYWUyMzNlZTk0NmMzOGYyYTZmNjNkMmZiZTg5Mi5kbGwAREJOdWxs
AGdldF9FbXBsb3llZUlEX0lzTnVsbABzZXRfRW1wbG95ZWVJRF9Jc051bGwAZ2V0X1RpdGxlX0lz
TnVsbABzZXRfVGl0bGVfSXNOdWxsAGdldF9IaXJlRGF0ZV9Jc051bGwAc2V0X0hpcmVEYXRlX0lz
TnVsbABnZXRfUmVwb3J0c1RvX0lzTnVsbABzZXRfUmVwb3J0c1RvX0lzTnVsbABnZXRfTm9tYnJl
RW1wbGVhZG9fSXNOdWxsAHNldF9Ob21icmVFbXBsZWFkb19Jc051bGwAU2V0TnVsbABnZXRfSXRl
bQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBnZXRfZHdoY29ubgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBT
cWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEludmFsaWRP
cGVyYXRpb25FeGNlcHRpb24AU2V0RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTdHJpbmdD
b21wYXJpc29uAGdldF9SZXBvcnRzVG8Ac2V0X1JlcG9ydHNUbwBnZXRfTm9tYnJlRW1wbGVhZG8A
c2V0X05vbWJyZUVtcGxlYWRvAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQ
aXBlbGluZVdyYXAAQXN5bmNUYXNrTWV0aG9kQnVpbGRlcgA8PnRfX2J1aWxkZXIASW5wdXQwQnVm
ZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAFNxbFBhcmFtZXRlcgBUYXNrQXdhaXRlcgBHZXRBd2FpdGVyAEZp
cmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18wYzkwYWUyMzNlZTk0NmMzOGYyYTZm
NjNkMmZiZTg5Mi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
TG9hZEVtcGxveWVlcwBTQ18wYzkwYWUyMzNlZTk0NmMzOGYyYTZmNjNkMmZiZTg5Mi5Qcm9wZXJ0
aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbklu
ZGV4ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MARXF1YWxzAENv
bm5lY3Rpb25zAGdldF9QYXJhbWV0ZXJzAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0Rl
ZmF1bHQAR2V0UmVzdWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBv
bmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
VHhTY3JpcHQAU3RhcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1By
b2Nlc3NJbnB1dABNb3ZlTmV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2
YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4
dFJvdwBnZXRfQXNzZW1ibHkAb3BfRXF1YWxpdHkAAC1JAG4AcAB1AHQAMABfAFAAcgBvAGMAZQBz
AHMASQBuAHAAdQB0AFIAbwB3AABJRQBsACAASQBEACAAZABlACAAZQBtAHAAbABlAGEAZABvACAA
bgBvACAAcAB1AGUAZABlACAAcwBlAHIAIABuAHUAbABvAC4AAAEAgJtJAHMATgB1AGwAbAAgAHAA
cgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABz
AGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwA
dQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAAPZAB3AGgAYwBvAG4AbgAA
cVMAQwBfADAAYwA5ADAAYQBlADIAMwAzAGUAZQA5ADQANgBjADMAOABmADIAYQA2AGYANgAzAGQA
MgBmAGIAZQA4ADkAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
KVsAZABiAG8AXQAuAFsATABvAGEAZABFAG0AcABsAG8AeQBlAGUAXQAAF0AARQBtAHAAbABvAHkA
ZQBlAEkARAAAH0AATgBvAG0AYgByAGUARQBtAHAAbABlAGEAZABvAAANQABUAGkAdABsAGUAABNA
AEgAaQByAGUARABhAHQAZQAAFUAAUgBlAHAAbwByAHQAcwBUAG8AADlFAHIAcgBvAHIAIABwAHIA
bwBjAGUAcwBhAG4AZABvACAARQBtAHAAbABlAGEAZABvAHMAOgAgAAAAAMIBJsjTwiZLsv6zAImd
YAEABCABAQgDIAABBSABARERBCABAQ4FIAEBEkEFIAEBElUGIAEBEYCVEgcHCA4OETkVET0BCBUR
PQEIAgMGETkFFRE9AQgFIAEBEwAEIAARWQUgABKAoQogBgEIDg4OCBACBAcBESQEAAARZQcwAQEB
EB4ABAoBESQEIAASSQkgAwESeR0IEn0DBhJ5AwYdCAQgAQgIBSACAQgcBCABAggEIAEOCAUgARE5
CAMgAAIHIAICDhGAsQUgAR0ICAUgABKAtQYgARKAuRwFAAASgL0GIAEcEoDBBwABEkERgMUFIAAS
gMkHIAIBDhKAyRAHBggSCBFZFRFdAQgSYRJhBiACAQ4SaQYgAQERgNEFIAASgNUHIAISgNkOHAQG
EoDdBwACAhE5ETkKMAICARAeABAeAQYKAhFZESQIIAAVEoDlAQgGFRKA5QEICCAAFRFdARMABRUR
XQEICQoCFRFdAQgRJAQgABMAAyAADgUAAg4ODgQAAQEOBSABARJhCLd6XFYZNOCJCImEXc2AgMyR
AwYSFAMGEhgEBhKAgQQGEoCNBAYSgJEDBhIgAgYIAwYRZQMGEggCBg4GBhURPQEIAwYSaQMGEm0D
BhFZBgYVEV0BCAUgAQESDA4gBRJJCA4OETkVET0BCAMgAAgEIAEBAgQgABE5BSABARE5CSAEAQgO
EnkSfQYgAQESgIEFAAASgI0FAAASgJEGAAEBEoCRBAAAEiADAAABAygACAMoAAIDKAAOBCgAETkF
CAASgI0FCAASgJEECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU0NfMGM5MGFlMjMzZWU5NDZjMzhmMmE2ZjYzZDJmYmU4OTIAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcjAQAeU2NyaXB0TWFpbis8TG9h
ZEVtcGxveWVlcz5kX18zAAAEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAHxDAAAAAAAAAAAAAJZDAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACIQwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
MABjADkAMABhAGUAMgAzADMAZQBlADkANAA2AGMAMwA4AGYAMgBhADYAZgA2ADMAZAAyAGYAYgBl
ADgAOQAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAwAGMAOQAwAGEAZQAyADMAMwBl
AGUAOQA0ADYAYwAzADgAZgAyAGEANgBmADYAMwBkADIAZgBiAGUAOAA5ADIALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADAAYwA5ADAAYQBl
ADIAMwAzAGUAZQA5ADQANgBjADMAOABmADIAYQA2AGYANgAzAGQAMgBmAGIAZQA4ADkAMgAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAwAGMAOQAwAGEAZQAy
ADMAMwBlAGUAOQA0ADYAYwAzADgAZgAyAGEANgBmADYAMwBkADIAZgBiAGUAOAA5ADIAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAKgzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_0c90ae233ee946c38f2a6f63d2fbe892</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::dwhconn</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">B9</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Employees\Load Employees Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Employees\Load Employees Data.Inputs[Input 0].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[EmployeeID]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Load Employees\Load Employees Data.Inputs[Input 0].Columns[NombreEmpleado]"
                      cachedDataType="wstr"
                      cachedLength="31"
                      cachedName="NombreEmpleado"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[NombreEmpleado]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Load Employees\Load Employees Data.Inputs[Input 0].Columns[Title]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="Title"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[Title]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Load Employees\Load Employees Data.Inputs[Input 0].Columns[HireDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="HireDate"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[HireDate]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Load Employees\Load Employees Data.Inputs[Input 0].Columns[ReportsTo]"
                      cachedDataType="i4"
                      cachedName="ReportsTo"
                      lineageId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB].Columns[ReportsTo]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Employees\Load Employees Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Employees\Load Employees Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Employees.Paths[Salida de origen de OLE DB]"
              endId="Package\Load Employees\Load Employees Data.Inputs[Input 0]"
              name="Salida de origen de OLE DB"
              startId="Package\Load Employees\Get Employees Data.Outputs[Salida de origen de OLE DB]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Product"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarea Flujo de datos"
      DTS:DTSID="{694064F3-1A9C-4C75-B01A-AEAB205935AB}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Product"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Product\Get Product Data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="Origen de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;7"
              description="Origen de OLE DB"
              name="Get Product Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">[dbo].[DWH_Producto]</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="Asignaciones entre los parámetros del comando SQL y las variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Product\Get Product Data.Connections[OleDbConnection]"
                  connectionManagerID="{2DA09653-34AB-4FD4-A103-0760CAB70A9B}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-S7LGA97_SQLEXPRESS.Northwind1]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB]"
                  name="Salida de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[ProductID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ProductID]"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[ProductID]"
                      name="ProductID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[ProductName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ProductName]"
                      length="40"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[ProductName]"
                      name="ProductName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[SupplierID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[SupplierID]"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[SupplierID]"
                      name="SupplierID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[UnitPrice]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[UnitPrice]"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[UnitPrice]"
                      name="UnitPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[UnitsInStock]"
                      dataType="i2"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[UnitsInStock]"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[UnitsInStock]"
                      name="UnitsInStock"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[Discontinued]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Discontinued]"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[Discontinued]"
                      name="Discontinued"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ProductID]"
                      dataType="i4"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="40"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[SupplierID]"
                      dataType="i4"
                      name="SupplierID" />
                    <externalMetadataColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[UnitPrice]"
                      dataType="cy"
                      name="UnitPrice" />
                    <externalMetadataColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[UnitsInStock]"
                      dataType="i2"
                      name="UnitsInStock" />
                    <externalMetadataColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Discontinued]"
                      dataType="bool"
                      name="Discontinued" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB]"
                  isErrorOut="true"
                  name="Salida de error de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[ProductID]"
                      dataType="i4"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[ProductID]"
                      name="ProductID" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[ProductName]"
                      dataType="wstr"
                      length="40"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[ProductName]"
                      name="ProductName" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[SupplierID]"
                      dataType="i4"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[SupplierID]"
                      name="SupplierID" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[UnitPrice]"
                      dataType="cy"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[UnitPrice]"
                      name="UnitPrice" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[UnitsInStock]"
                      dataType="i2"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[UnitsInStock]"
                      name="UnitsInStock" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[Discontinued]"
                      dataType="bool"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[Discontinued]"
                      name="Discontinued" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Product\Load Product Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Product Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Threading.Tasks;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        LoadProduct(Row.ProductID, Row.ProductName, Row.SupplierID, Row.UnitPrice, Row.UnitsInStock, Row.Discontinued).GetAwaiter();
    }

    public async Task LoadProduct(int ProductID, string ProductName, int SupplierID, decimal UnitPrice, short UnitsInStock, bool Discontinued)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection(this.Variables.dwhconn))
            {
                using (SqlCommand command = new SqlCommand("[dbo].[LoadProduct]", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;

                    command.Parameters.AddWithValue("@ProductID", ProductID);
                    command.Parameters.AddWithValue("@ProductName", ProductName);
                    command.Parameters.AddWithValue("@SupplierID", SupplierID);
                    command.Parameters.AddWithValue("@UnitPrice", UnitPrice);
                    command.Parameters.AddWithValue("@UnitsInStock", UnitsInStock);
                    command.Parameters.AddWithValue("@Discontinued", Discontinued);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception ex)

        {
            Console.WriteLine($"Error procesando Productos: {ex.Message}");
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_125fa502f232437498d38b454208c88f.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{264A0323-AE15-4265-8DB4-6F3D847DCDF0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_125fa502f232437498d38b454208c88f</RootNamespace>
    <AssemblyName>SC_125fa502f232437498d38b454208c88f</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ProductID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ProductID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ProductName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool ProductName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 SupplierID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool SupplierID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Decimal UnitPrice
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[3]);
        }
    }
    public bool UnitPrice_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int16 UnitsInStock
    {
        get
        {
            return Buffer.GetInt16(BufferColumnIndexes[4]);
        }
    }
    public bool UnitsInStock_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Boolean Discontinued
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[5]);
        }
    }
    public bool Discontinued_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_125fa502f232437498d38b454208c88f.Properties.Settings.get_Default():SC_125fa502f232437498d38b454208c88f.Properties.Sett" +
    "ings")]

namespace SC_125fa502f232437498d38b454208c88f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String dwhconn
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["dwhconn"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_125fa502f232437498d38b454208c88f</msb:CodeName>
    <msb:DisplayName>SC_125fa502f232437498d38b454208c88f</msb:DisplayName>
    <msb:ProjectId>{78EB1D48-697C-4BD0-ABA7-38F1B13A2E8C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_125fa502f232437498d38b454208c88f.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_125fa502f232437498d38b454208c88f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_125fa502f232437498d38b454208c88f")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_125fa502f232437498d38b454208c88f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_125fa502f232437498d38b454208c88f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_125fa502f232437498d38b454208c88f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_125fa502f232437498d38b454208c88f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_125fa502f232437498d38b454208c88f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_125fa502f232437498d38b454208c88f.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
TAp1AOEAIAl1APkArQcGADkB5Ah5APkAqQiBAAEBrQcGAPkAfwiHAEkB3AWNAPkAIAqUAFEB8Qma
AHEAlwGhAHEAVAqpABEBrQevADEBrQcGAMkArQcQANEArQfIAHkBJgLPANEA9wjWAIkBlwTcALEB
4wBEAKkAGQF1AMEAAgHkAKkAOAkGAHkB7QD2AAwAogcGARQAGQF1ABQAOAkfAcEBgAIGALkAbQEk
ATkBBgkoAckBywEuAcEAiAYzAcEAQgkGAMEA6AEbAC4ACwABAi4AEwAKAi4AGwApAi4AIwAyAi4A
KwBbAi4AMwBbAi4AOwBbAi4AQwAyAi4ASwBhAi4AUwBbAi4AWwB4AkMAYwDoAoAAawDGAuEAcwDo
AuMAkwDoAiMBcwDoAskBmwApAukBmwApAoAEiwDoAi0AtwADAAEABgANAAcADgAIABAAAAC8ANsB
AABvBd8BAAC1AeMBAACxBd8BAACtANsBAABZBd8BAABTAecBAACcBd8BAAD2BOwBAADIBd8BAAAt
Ad8BAACEBd8BAAASBuMBAABRB/ABAABgAvYBAAAwCfwBAgAHAAMAAgAIAAUAAgAJAAcAAgAKAAkA
AgALAAsAAgAMAA0AAgANAA8AAgAOABEAAgAPABMAAgAQABUAAgARABcAAgASABkAAgAbABsAAgAd
AB0AAgAeAB8AAQAfAB8AAgAgACEACQBGAB8ACQBIACEA/wAPAQSAAAABAAAAAAAAAAAAAAAAAKoE
AAAEAAAAAAAAAAAAAAA5AdoAAAAAABAAAAAAAAAAAAAAAEIBkAkAAAAABAAAAAAAAAAAAAAAOQHO
AAAAAAAQAAAAAAAAAAAAAABCAbMJAAAAAAQAAAAAAAAAAAAAADkB5QUAAAAAEAAAAAAAAAAAAAAA
QgHdBgAAAAAAAAAAAQAAAP4HAAAJAAIAMQA/AHEA7wBxABUBAAAAAABJRFRTVmFyaWFibGUxMDAA
SURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVfXzEAVGFza2AxAFRh
c2tBd2FpdGVyYDEAR2V0SW50MzIAPGNvbm5lY3Rpb24+NV9fMgA8PnVfXzIAPGNvbW1hbmQ+NV9f
MwA8TG9hZFByb2R1Y3Q+ZF9fMwBHZXRJbnQxNgA8TW9kdWxlPgBnZXRfU3VwcGxpZXJJRABnZXRf
UHJvZHVjdElEAElucHV0SUQAU3lzdGVtLkRhdGEAbXNjb3JsaWIAT3BlbkFzeW5jAEV4ZWN1dGVO
b25RdWVyeUFzeW5jAEF3YWl0VW5zYWZlT25Db21wbGV0ZWQAZ2V0X0lzQ29tcGxldGVkAGdldF9E
aXNjb250aW51ZWQARGJDb21tYW5kAFNxbENvbW1hbmQAZ2V0X1VuaXRQcmljZQBkZWZhdWx0SW5z
dGFuY2UAZ2V0X01lc3NhZ2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUAQ29uc29sZQBnZXRfUHJvZHVjdE5hbWUASW5wdXROYW1lAFdyaXRlTGluZQBJQXN5
bmNTdGF0ZU1hY2hpbmUAU2V0U3RhdGVNYWNoaW5lAHN0YXRlTWFjaGluZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5QaXBlbGluZQBzZXRfQ29tbWFuZFR5cGUAVmFsdWVUeXBlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNw
b3NlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQA8PjFfX3N0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3lu
Y1N0YXRlTWFjaGluZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4
ZWN1dGUAUG9zdEV4ZWN1dGUAQWRkV2l0aFZhbHVlAHZhbHVlAFNDXzEyNWZhNTAyZjIzMjQzNzQ5
OGQzOGI0NTQyMDhjODhmAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAGdldF9V
bml0c0luU3RvY2sAZ2V0X1Rhc2sAR2V0RGVjaW1hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0Nf
MTI1ZmE1MDJmMjMyNDM3NDk4ZDM4YjQ1NDIwOGM4OGYuZGxsAGdldF9TdXBwbGllcklEX0lzTnVs
bABnZXRfUHJvZHVjdElEX0lzTnVsbABnZXRfRGlzY29udGludWVkX0lzTnVsbABnZXRfVW5pdFBy
aWNlX0lzTnVsbABnZXRfUHJvZHVjdE5hbWVfSXNOdWxsAGdldF9Vbml0c0luU3RvY2tfSXNOdWxs
AGdldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBHZXRCb29sZWFuAFNjcmlwdE1haW4AZ2V0X2R3
aGNvbm4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlv
bgBTZXRFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVy
ZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50
aW1lV3JhcABBc3luY1Rhc2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBJbnB1dDBCdWZmZXIA
UGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAFNxbFBhcmFtZXRlcgBUYXNrQXdhaXRlcgBH
ZXRBd2FpdGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzEyNWZhNTAyZjIzMjQzNzQ5OGQz
OGI0NTQyMDhjODhmLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ18xMjVmYTUwMmYyMzI0Mzc0OThkMzhiNDU0MjA4Yzg4Zi5Qcm9wZXJ0aWVzAGdldF9SZWFk
T25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGlu
Z3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MARXF1YWxzAENvbm5lY3Rpb25zAGdl
dF9QYXJhbWV0ZXJzAENvbmNhdABPYmplY3QATG9hZFByb2R1Y3QARW5kT2ZSb3dzZXQAZ2V0X0Rl
ZmF1bHQAR2V0UmVzdWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBv
bmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
VHhTY3JpcHQAU3RhcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1By
b2Nlc3NJbnB1dABNb3ZlTmV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2
YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4
dFJvdwBnZXRfQXNzZW1ibHkAAAAAAA9JAG4AcAB1AHQAIAAwAAAPZAB3AGgAYwBvAG4AbgAAcVMA
QwBfADEAMgA1AGYAYQA1ADAAMgBmADIAMwAyADQAMwA3ADQAOQA4AGQAMwA4AGIANAA1ADQAMgAw
ADgAYwA4ADgAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAJ1sA
ZABiAG8AXQAuAFsATABvAGEAZABQAHIAbwBkAHUAYwB0AF0AABVAAFAAcgBvAGQAdQBjAHQASQBE
AAAZQABQAHIAbwBkAHUAYwB0AE4AYQBtAGUAABdAAFMAdQBwAHAAbABpAGUAcgBJAEQAABVAAFUA
bgBpAHQAUAByAGkAYwBlAAAbQABVAG4AaQB0AHMASQBuAFMAdABvAGMAawAAG0AARABpAHMAYwBv
AG4AdABpAG4AdQBlAGQAADlFAHIAcgBvAHIAIABwAHIAbwBjAGUAcwBhAG4AZABvACAAUAByAG8A
ZAB1AGMAdABvAHMAOgAgAAAADTIqbdolr0GoLBzI5XVoXAAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQESOQUgAQESUQYgAQERgJEEIAARVQQHAREkBAAAEWEHMAEBARAeAAQKAREkBCAAEkEJIAMBEnUd
CBJ5AwYSdQMGHQgEIAEICAQgAQIIBCABDggFIAERRQgEIAEGCAMgAAIHIAICDhGAoQUgAR0ICAUg
ABKApQYgARKAqRwFAAASgK0GIAEcEoCxBwABEjkRgLUFIAASgLkHIAIBDhKAuRAHBggSCBFVFRFZ
AQgSXRJdBiACAQ4SZQYgAQERgMEFIAASgMUHIAISgM0OHAowAgIBEB4AEB4BBgoCEVURJAggABUS
gN0BCAYVEoDdAQgIIAAVEVkBEwAFFRFZAQgJCgIVEVkBCBEkBCAAEwADIAAOBQACDg4OBAABAQ4F
IAEBEl0It3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEn0EBhKAiQQGEoCNAwYSIAIGCAMGEWED
BhIIAgYOAwYRRQIGBgIGAgMGEmUDBhJpAwYRVQYGFRFZAQgFIAEBEgwLIAYSQQgOCBFFBgIDIAAI
BCAAEUUDIAAGCSAEAQgOEnUSeQUgAQESfQUAABKAiQUAABKAjQYAAQESgI0EAAASIAMAAAEDKAAI
AygAAgMoAA4EKAARRQMoAAYFCAASgIkFCAASgI0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMTI1ZmE1MDJmMjMyNDM3NDk4ZDM4YjQ1
NDIwOGM4OGYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAATQEAHC5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQu
Ny4yIQEAHFNjcmlwdE1haW4rPExvYWRQcm9kdWN0PmRfXzMAAAQBAAAAAAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AOQ+AAAAAAAAAAAAAP4+AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwPgAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwAxADIANQBmAGEANQAwADIAZgAyADMAMgA0ADMANwA0ADkAOABkADMAOABiADQANQA0ADIAMAA4
AGMAOAA4AGYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADEAMgA1AGYAYQA1ADAAMgBm
ADIAMwAyADQAMwA3ADQAOQA4AGQAMwA4AGIANAA1ADQAMgAwADgAYwA4ADgAZgAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMQAyADUAZgBh
ADUAMAAyAGYAMgAzADIANAAzADcANAA5ADgAZAAzADgAYgA0ADUANAAyADAAOABjADgAOABmAC4A
ZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADEAMgA1AGYAYQA1
ADAAMgBmADIAMwAyADQAMwA3ADQAOQA4AGQAMwA4AGIANAA1ADQAMgAwADgAYwA4ADgAZgAAADQA
CAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAED8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_125fa502f232437498d38b454208c88f</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::dwhconn</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">DE</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Product\Load Product Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Product\Load Product Data.Inputs[Input 0].Columns[ProductID]"
                      cachedDataType="i4"
                      cachedName="ProductID"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[ProductID]" />
                    <inputColumn
                      refId="Package\Load Product\Load Product Data.Inputs[Input 0].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="ProductName"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[ProductName]" />
                    <inputColumn
                      refId="Package\Load Product\Load Product Data.Inputs[Input 0].Columns[SupplierID]"
                      cachedDataType="i4"
                      cachedName="SupplierID"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[SupplierID]" />
                    <inputColumn
                      refId="Package\Load Product\Load Product Data.Inputs[Input 0].Columns[UnitPrice]"
                      cachedDataType="cy"
                      cachedName="UnitPrice"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[UnitPrice]" />
                    <inputColumn
                      refId="Package\Load Product\Load Product Data.Inputs[Input 0].Columns[UnitsInStock]"
                      cachedDataType="i2"
                      cachedName="UnitsInStock"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[UnitsInStock]" />
                    <inputColumn
                      refId="Package\Load Product\Load Product Data.Inputs[Input 0].Columns[Discontinued]"
                      cachedDataType="bool"
                      cachedName="Discontinued"
                      lineageId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB].Columns[Discontinued]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Product\Load Product Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Product\Load Product Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Product.Paths[Salida de origen de OLE DB]"
              endId="Package\Load Product\Load Product Data.Inputs[Input 0]"
              name="Salida de origen de OLE DB"
              startId="Package\Load Product\Get Product Data.Outputs[Salida de origen de OLE DB]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Shippers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarea Flujo de datos"
      DTS:DTSID="{5CDC68DD-78D0-4B10-9276-B19D65CCD1A7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Shippers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Shippers\Get Shippers Data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="Origen de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;7"
              description="Origen de OLE DB"
              name="Get Shippers Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">[dbo].[DWH_Shippers]</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="Asignaciones entre los parámetros del comando SQL y las variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Shippers\Get Shippers Data.Connections[OleDbConnection]"
                  connectionManagerID="{2DA09653-34AB-4FD4-A103-0760CAB70A9B}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-S7LGA97_SQLEXPRESS.Northwind1]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB]"
                  name="Salida de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].Columns[ShipperID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ShipperID]"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].Columns[ShipperID]"
                      name="ShipperID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].Columns[CompanyName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CompanyName]"
                      length="40"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].Columns[CompanyName]"
                      name="CompanyName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].Columns[Phone]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Phone]"
                      length="24"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].Columns[Phone]"
                      name="Phone"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[ShipperID]"
                      dataType="i4"
                      name="ShipperID" />
                    <externalMetadataColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[CompanyName]"
                      dataType="wstr"
                      length="40"
                      name="CompanyName" />
                    <externalMetadataColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].ExternalColumns[Phone]"
                      dataType="wstr"
                      length="24"
                      name="Phone" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB]"
                  isErrorOut="true"
                  name="Salida de error de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[ShipperID]"
                      dataType="i4"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[ShipperID]"
                      name="ShipperID" />
                    <outputColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[CompanyName]"
                      dataType="wstr"
                      length="40"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[CompanyName]"
                      name="CompanyName" />
                    <outputColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[Phone]"
                      dataType="wstr"
                      length="24"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[Phone]"
                      name="Phone" />
                    <outputColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Shippers\Load Shippers Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Shippers Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String dwhconn
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["dwhconn"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using System.Threading.Tasks;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        LoadShipper(Row.ShipperID, Row.CompanyName, Row.Phone).GetAwaiter();
    }

    public async Task LoadShipper(int ShipperID, string CompanyName, string Phone)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection(this.Variables.dwhconn))
            {
                using (SqlCommand command = new SqlCommand("[dbo].[LoadShipper]", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;

                    command.Parameters.AddWithValue("@ShipperID", ShipperID);
                    command.Parameters.AddWithValue("@CompanyName", CompanyName);
                    command.Parameters.AddWithValue("@Phone", Phone);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception ex)

        {
            Console.WriteLine($"Error procesando Transportistas: {ex.Message}");
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8931e6fcf51f496eb9732d303963bd27.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E18C2805-EC4D-4D8C-A986-8972A9459176}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8931e6fcf51f496eb9732d303963bd27</RootNamespace>
    <AssemblyName>SC_8931e6fcf51f496eb9732d303963bd27</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8931e6fcf51f496eb9732d303963bd27.Properties.Settings.get_Default():SC_8931e6fcf51f496eb9732d303963bd27.Properties.Sett" +
    "ings")]

namespace SC_8931e6fcf51f496eb9732d303963bd27.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ShipperID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ShipperID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CompanyName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CompanyName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Phone
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Phone_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_8931e6fcf51f496eb9732d303963bd27</msb:CodeName>
    <msb:DisplayName>SC_8931e6fcf51f496eb9732d303963bd27</msb:DisplayName>
    <msb:ProjectId>{1A3503F9-BC09-4498-A170-C6A332BDC98D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_8931e6fcf51f496eb9732d303963bd27.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8931e6fcf51f496eb9732d303963bd27")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8931e6fcf51f496eb9732d303963bd27")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8931e6fcf51f496eb9732d303963bd27.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8931e6fcf51f496eb9732d303963bd27.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8931e6fcf51f496eb9732d303963bd27.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8931e6fcf51f496eb9732d303963bd27.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8931e6fcf51f496eb9732d303963bd27.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8931e6fcf51f496eb9732d303963bd27.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
IBIAAEABAAAjVVMAYBMAABAAAAAjR1VJRAAAAHATAADEAgAAI0Jsb2IAAAAAAAAAAgAAAVcXogsJ
CwAAAPoBMwAWAAABAAAANgAAAAkAAAARAAAAHgAAABEAAAABAAAAQQAAABMAAAACAAAABAAAAAoA
AAALAAAAAgAAAAIAAAABAAAABgAAAAEAAAABAAAAAwAAAAAA5AQBAAAAAAAGAMUDOwcGAFkEOwcG
AN4CKAcPAK8HAAAGAAsDpgUGAKgDpgUGAIkDpgUGAEAEpgUGAOUDpgUGAP4DpgUGAD0DpgUGAFgD
oQQKABkE8gEGADICUgUGACIDOwcGAMkEOwgGAKYCOwcGAC0CUgUGAMIBOwcGAAQHOwcGAEgAOwcG
AO0FUgUGAGIGOwcOANwFrggOAD8BrggGAHEDKAcKAKIG8gESAJMG8gEKACcG8gEKAOII8gEGAHsI
UgUGAMECKAcGALMGWwcGABsGkQUWAIYCzgQWAPICzgQWAF8CfAUGAL4EUgUGAAoGUgUaABEAwwYa
AAEAwwZ7AGcJAAAaACIAwwYGAHIBUgUGALoJpgUOADUB9wUOACEC2gAOALgFrggGAFkAUgUOAPcG
rggOAM8F9wUGAEEAOwgGAGYBUgUGAJYBUgUAAAAAuwAAAAAAAQABAAEAEABlBQAAEAABAAEAAQAQ
AIYGAABtAAEABgABABAAxAgAAHkAAQAPAAEAEABZCAAAfQADABMAAQAQAPkHAAB9AAQAFAAAABAA
Yge+B30ABQAWAAABEAAoCL4HlQAHABoAAwEQAIUAAABJAAgAHQAGAFkIQAEGAPkHRAEBANIISAEB
ANIISAERAFkFTAERAE8CUQERAEoBVgEGAJsCWgEGAHkGXQEGADEIYQEGAMgAWgEGAKwBZQEGABcC
ZQEBAF8AaAEBAHcAbAEBADoAcAEBAHAAdAFQIAAAAADGAHcEBgABAFggAAAAAMYAggQGAAEAYCAA
AAAAxgCXCXsBAQCAIAAAAACGAOsGgQECANsgAAAAAIYYGwcGAAUA4yAAAAAAhhgbB0kABQDuIAAA
AACGCMQAiQEIAAMhAAAAAIYIDAVqAAgADCEAAAAAhgioARkBCAAhIQAAAACGCCEFagAIACohAAAA
AIYIEwIZAQgAPyEAAAAAhgg4BWoACABIIQAAAACGAK4JagAIAFAhAAAAAIYAgghqAAgAWCEAAAAA
hhgbBwYACAB4IQAAAADGAD0JjQEIAJ0hAAAAAMYBNgl7AQwAsCEAAAAAxgGXCXsBDQCyIQAAAACG
GBsHlwEOAMEhAAAAAIYYGweXAQ8A0CEAAAAAhghwBRkBEAD2IQAAAACDGBsHBgAQAP4hAAAAAJMI
rwadARAAKiIAAAAAkwg3AqMBEAAxIgAAAACTCEMCqQEQADkiAAAAAJYIjgiwAREAQCIAAAAAhhgb
BwYAEQBIIgAAAACRGCEHtQERAFQiAAAAAOEBSgkGABEA0CQAAAAA4QHVARsAEQAAAAEAsgkAAAEA
yAAAAAIArAEAAAMAFwIAAAEAqAYAAAIAAwgAAAMANQYAAAEA0gAAAAIAngEAAAMAqAYAAAQANQYA
AAEAqAYAAAEAsgkAAAEA6AgAAAEA6AgAAAEAmwQAAAEA5QEJAE0ACQAbBwEAEQAbBwYAGQAbBwoA
KQAbBxAAMQAbBxAAOQAbBxAAQQAbBxAASQAbBxAAUQAbBxAAWQAbBxAAYQAbBxAAaQAbBwYAeQAb
BxUAiQAbBwYAmQBKCQYAmQDVARsA0QAbBwYAAQEbBwYAIQEbByEA8QB3BAYA8QCCBAYAgQAQBygA
uQB/AjIAuQAPCTcAuQDFBEQA2QAbB0kA2QCoBlMA2QADCFcA4QBWAFsA2QBCBWAA4QC7BGUA2QCu
CWoA2QCCCGoA8QAbBwYAMQFSCG4A8QAXCHYA+QAbBwYA8QDtB3wAQQFJBYIA8QCCCYkASQFTCY8A
cQCEAZYAcQC2CZ4ACQEbB6QAKQEbBwYAwQAbBxAAyQAbB70AcQEdAsQAyQBlCMsAgQGOBNEAmQHv
AEQAoQAlAWoAuQAOAdkAoQCaCAYAcQH5AOsADAAQB/sAFAAlAWoAFACaCBQBqQF3AgYAsQBaARkB
MQF0CB0BsQG4ASMBuQDqBSgBuQCkCAYAuQDVARsALgALANYBLgATAN8BLgAbAP4BLgAjAAcCLgAr
ADACLgAzADACLgA7ADACLgBDAAcCLgBLADYCLgBTADACLgBbAE0CQwBjAL0CgABrAJsC4QBzAL0C
4wCTAL0CCQGbAP4BIwFzAL0CKQGbAP4BwAOLAL0CLQCsAAMAAQAGAAcABwAIAAgACgAAAMgAuQEA
ABAFvQEAAKwBwQEAACUFvQEAABcCwQEAADwFvQEAAHQFwQEAALMGxQEAAFcCywEAAJII0QECAAcA
AwACAAgABQACAAkABwACAAoACQACAAsACwACAAwADQACABUADwACABcAEQACABgAEwABABkAEwAC
ABoAFQAJADoAHwAJADwAIQD0AAQBBIAAAAEAAAAAAAAAAAAAAAAAlwAAAAQAAAAAAAAAAAAAAC4B
5gAAAAAAEAAAAAAAAAAAAAAANwHyCAAAAAAEAAAAAAAAAAAAAAAuAdoAAAAAABAAAAAAAAAAAAAA
ADcBFQkAAAAABAAAAAAAAAAAAAAALgFSBQAAAAAQAAAAAAAAAAAAAAA3AT8GAAAAAAAAAAABAAAA
bAcAAAkAAgAxAD8AawDkAGsACgEAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAw
AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwADw+dV9fMQBUYXNrYDEAVGFza0F3YWl0ZXJgMQBHZXRJ
bnQzMgA8Y29ubmVjdGlvbj41X18yADw+dV9fMgA8Y29tbWFuZD41X18zADxMb2FkU2hpcHBlcj5k
X18zAFNDXzg5MzFlNmZjZjUxZjQ5NmViOTczMmQzMDM5NjNiZDI3ADxNb2R1bGU+AGdldF9TaGlw
cGVySUQASW5wdXRJRABTeXN0ZW0uRGF0YQBtc2NvcmxpYgBPcGVuQXN5bmMARXhlY3V0ZU5vblF1
ZXJ5QXN5bmMAQXdhaXRVbnNhZmVPbkNvbXBsZXRlZABnZXRfSXNDb21wbGV0ZWQARGJDb21tYW5k
AFNxbENvbW1hbmQAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAElEaXNwb3NhYmxlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENvbnNvbGUASW5wdXROYW1lAGdldF9Db21w
YW55TmFtZQBXcml0ZUxpbmUASUFzeW5jU3RhdGVNYWNoaW5lAFNldFN0YXRlTWFjaGluZQBzdGF0
ZU1hY2hpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAZ2V0X1Bob25lAHNldF9D
b21tYW5kVHlwZQBWYWx1ZVR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0
dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlADw+MV9fc3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzeW5jU3RhdGVNYWNoaW5lQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dl
ckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRo
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAZ2V0X1Rhc2sA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzg5MzFlNmZjZjUxZjQ5NmViOTczMmQzMDM5NjNiZDI3
LmRsbABnZXRfU2hpcHBlcklEX0lzTnVsbABnZXRfQ29tcGFueU5hbWVfSXNOdWxsAGdldF9QaG9u
ZV9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AZ2V0X2R3aGNv
bm4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBT
ZXRFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1l
V3JhcABBc3luY1Rhc2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBJbnB1dDBCdWZmZXIAUGlw
ZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAExvYWRTaGlwcGVyAFNxbFBhcmFtZXRlcgBUYXNr
QXdhaXRlcgBHZXRBd2FpdGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzg5MzFlNmZjZjUx
ZjQ5NmViOTczMmQzMDM5NjNiZDI3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ184OTMxZTZmY2Y1MWY0OTZlYjk3MzJkMzAzOTYzYmQyNy5Qcm9wZXJ0aWVz
AGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MAPD40X190aGlzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MARXF1YWxzAENvbm5l
Y3Rpb25zAGdldF9QYXJhbWV0ZXJzAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1
bHQAR2V0UmVzdWx0AFNldFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQAU3RhcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nl
c3NJbnB1dABNb3ZlTmV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxD
b250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJv
dwBnZXRfQXNzZW1ibHkAAAAPSQBuAHAAdQB0ACAAMAAAD2QAdwBoAGMAbwBuAG4AAHFTAEMAXwA4
ADkAMwAxAGUANgBmAGMAZgA1ADEAZgA0ADkANgBlAGIAOQA3ADMAMgBkADMAMAAzADkANgAzAGIA
ZAAyADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACdbAGQAYgBv
AF0ALgBbAEwAbwBhAGQAUwBoAGkAcABwAGUAcgBdAAAVQABTAGgAaQBwAHAAZQByAEkARAAAGUAA
QwBvAG0AcABhAG4AeQBOAGEAbQBlAAANQABQAGgAbwBuAGUAAENFAHIAcgBvAHIAIABwAHIAbwBj
AGUAcwBhAG4AZABvACAAVAByAGEAbgBzAHAAbwByAHQAaQBzAHQAYQBzADoAIAAAAAAA3eMu2zO9
Lk+BAidBxn8PsQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQESOQUgAQESTQYgAQERgI0EIAARUQQH
AREkBAAAEV0HMAEBARAeAAQKAREkBCAAEkEJIAMBEnEdCBJ1AwYScQMGHQgEIAEICAQgAQIIBCAB
DggDIAACByACAg4RgJ0FIAEdCAgFIAASgKEGIAESgKUcBQAAEoCpBiABHBKArQcAARI5EYCxBSAA
EoC1ByACAQ4SgLUQBwYIEggRURURVQEIElkSWQYgAgEOEmEGIAEBEYC9BSAAEoDBByACEoDJDhwK
MAICARAeABAeAQYKAhFRESQIIAAVEoDRAQgGFRKA0QEICCAAFRFVARMABRURVQEICQoCFRFVAQgR
JAQgABMAAyAADgUAAg4ODgQAAQEOBSABARJZCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJ5
BAYSgIUEBhKAiQMGEiACBggDBhFdAwYSCAIGDgMGEmEDBhJlAwYRUQYGFRFVAQgFIAEBEgwHIAMS
QQgODgMgAAgJIAQBCA4ScRJ1BSABARJ5BQAAEoCFBQAAEoCJBgABARKAiQQAABIgAwAAAQMoAAgD
KAACAygADgUIABKAhQUIABKAiQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ184OTMxZTZmY2Y1MWY0OTZlYjk3MzJkMzAzOTYzYmQyNwAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABNAQAcLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUULk5FVCBGcmFtZXdvcmsgNC43LjIhAQAcU2Ny
aXB0TWFpbis8TG9hZFNoaXBwZXI+ZF9fMwAABAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD0OwAAAAAAAAAA
AAAOPAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AOAA5ADMAMQBlADYAZgBjAGYANQAxAGYANAA5ADYAZQBiADkANwAzADIAZAAzADAAMwA5ADYA
MwBiAGQAMgA3AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4ADkAMwAxAGUANgBmAGMA
ZgA1ADEAZgA0ADkANgBlAGIAOQA3ADMAMgBkADMAMAAzADkANgAzAGIAZAAyADcALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgAOQAzADEA
ZQA2AGYAYwBmADUAMQBmADQAOQA2AGUAYgA5ADcAMwAyAGQAMwAwADMAOQA2ADMAYgBkADIANwAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4ADkAMwAxAGUA
NgBmAGMAZgA1ADEAZgA0ADkANgBlAGIAOQA3ADMAMgBkADMAMAAzADkANgAzAGIAZAAyADcAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8931e6fcf51f496eb9732d303963bd27</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::dwhconn</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">EC</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Shippers\Load Shippers Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Shippers\Load Shippers Data.Inputs[Input 0].Columns[ShipperID]"
                      cachedDataType="i4"
                      cachedName="ShipperID"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].Columns[ShipperID]" />
                    <inputColumn
                      refId="Package\Load Shippers\Load Shippers Data.Inputs[Input 0].Columns[CompanyName]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="CompanyName"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].Columns[CompanyName]" />
                    <inputColumn
                      refId="Package\Load Shippers\Load Shippers Data.Inputs[Input 0].Columns[Phone]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="Phone"
                      lineageId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB].Columns[Phone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Shippers\Load Shippers Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Shippers\Load Shippers Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Shippers.Paths[Salida de origen de OLE DB]"
              endId="Package\Load Shippers\Load Shippers Data.Inputs[Input 0]"
              name="Salida de origen de OLE DB"
              startId="Package\Load Shippers\Get Shippers Data.Outputs[Salida de origen de OLE DB]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{CB34C625-24EF-487E-B943-5FE68D001D8F}"
      DTS:From="Package\Clear Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load Category" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{A1CE4D53-D15A-4B59-9872-EA5632429C1F}"
      DTS:From="Package\Load Category"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load Employees" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{F6C8174D-0A48-46B6-98CE-7309961D48B7}"
      DTS:From="Package\Load Employees"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Load Customers" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{0031C11C-FC25-4E77-A352-11E3B627AA0B}"
      DTS:From="Package\Load Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Load Product" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{5125D52C-336E-434F-8E1C-B5A1560ECBD0}"
      DTS:From="Package\Load Product"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Load Shippers" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="132,42"
          Id="Package\Clear Data"
          TopLeft="235,81" />
        <NodeLayout
          Size="151,42"
          Id="Package\Load Category"
          TopLeft="230,174" />
        <NodeLayout
          Size="160,42"
          Id="Package\Load Customers"
          TopLeft="617,184" />
        <NodeLayout
          Size="161,42"
          Id="Package\Load Employees"
          TopLeft="421,178" />
        <NodeLayout
          Size="144,42"
          Id="Package\Load Product"
          TopLeft="579,267" />
        <NodeLayout
          Size="150,42"
          Id="Package\Load Shippers"
          TopLeft="377,269" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="303.25,123">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="381,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40,0"
              Start="0,0"
              End="32.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="582,202">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35,0"
              Start="0,0"
              End="27.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="697,226">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-46,41"
              Start="0,0"
              End="-46,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5"
                    Point2="0,20.5"
                    Point3="-4,20.5" />
                  <mssgle:LineSegment
                    End="-42,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-42,20.5"
                    Point2="-46,20.5"
                    Point3="-46,24.5" />
                  <mssgle:LineSegment
                    End="-46,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="579,289">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-52,0"
              Start="0,0"
              End="-44.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-44.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load Category">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="177,42"
          Id="Package\Load Category\Load Category Data"
          TopLeft="374,205" />
        <NodeLayout
          Size="170,42"
          Id="Package\Load Category\Get Category Data"
          TopLeft="400,96" />
        <EdgeLayout
          Id="Package\Load Category.Paths[Salida de origen de OLE DB]"
          TopLeft="485,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.5,67"
              Start="0,0"
              End="-22.5,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.5"
                    Point2="0,33.5"
                    Point3="-4,33.5" />
                  <mssgle:LineSegment
                    End="-18.5,33.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,33.5"
                    Point2="-22.5,33.5"
                    Point3="-22.5,37.5" />
                  <mssgle:LineSegment
                    End="-22.5,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Category\Get Category Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">View</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Load Customers\Load Customers Data"
          TopLeft="397,200" />
        <NodeLayout
          Size="179,42"
          Id="Package\Load Customers\Get Customers Data"
          TopLeft="438,95" />
        <EdgeLayout
          Id="Package\Load Customers.Paths[Salida de origen de OLE DB]"
          TopLeft="527.5,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-37.5,63"
              Start="0,0"
              End="-37.5,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.5"
                    Point2="0,31.5"
                    Point3="-4,31.5" />
                  <mssgle:LineSegment
                    End="-33.5,31.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-33.5,31.5"
                    Point2="-37.5,31.5"
                    Point3="-37.5,35.5" />
                  <mssgle:LineSegment
                    End="-37.5,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Customers\Get Customers Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">View</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Employees">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="187,42"
          Id="Package\Load Employees\Load Employees Data"
          TopLeft="402,206" />
        <NodeLayout
          Size="180,42"
          Id="Package\Load Employees\Get Employees Data"
          TopLeft="406,95" />
        <EdgeLayout
          Id="Package\Load Employees.Paths[Salida de origen de OLE DB]"
          TopLeft="495.75,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Employees\Get Employees Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">View</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Product">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,42"
          Id="Package\Load Product\Get Product Data"
          TopLeft="313,60" />
        <NodeLayout
          Size="170,42"
          Id="Package\Load Product\Load Product Data"
          TopLeft="269,175" />
        <EdgeLayout
          Id="Package\Load Product.Paths[Salida de origen de OLE DB]"
          TopLeft="395,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41,73"
              Start="0,0"
              End="-41,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.5"
                    Point2="0,36.5"
                    Point3="-4,36.5" />
                  <mssgle:LineSegment
                    End="-37,36.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-37,36.5"
                    Point2="-41,36.5"
                    Point3="-41,40.5" />
                  <mssgle:LineSegment
                    End="-41,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Product\Get Product Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">View</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Shippers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="176,42"
          Id="Package\Load Shippers\Load Shippers Data"
          TopLeft="323,214" />
        <NodeLayout
          Size="169,42"
          Id="Package\Load Shippers\Get Shippers Data"
          TopLeft="350,98" />
        <EdgeLayout
          Id="Package\Load Shippers.Paths[Salida de origen de OLE DB]"
          TopLeft="434.5,140">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.5,74"
              Start="0,0"
              End="-23.5,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33"
                    Point2="0,37"
                    Point3="-4,37" />
                  <mssgle:LineSegment
                    End="-19.5,37" />
                  <mssgle:CubicBezierSegment
                    Point1="-19.5,37"
                    Point2="-23.5,37"
                    Point3="-23.5,41" />
                  <mssgle:LineSegment
                    End="-23.5,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Shippers\Get Shippers Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">View</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>